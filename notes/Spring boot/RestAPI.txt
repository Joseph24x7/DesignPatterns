1. 1xx, 2xx, 3xx, 4xx, 5xx - commonly used for?

1xx - Informational
2xx - Success
3xx - Redirect
4xx - Client Error
5xx - Server Error

========================================================================================================================================================

2. PATCH, OPTIONS in http methods usage?

- The PATCH method is used to apply partial modifications to a resource. For example modifying only the status of the employee.
- The OPTIONS method is used to request information about HTTP methods, headers, or other features are supported by a specific resource or server.

========================================================================================================================================================

3. Webclient vs Rest template vs Httpclient vs Rest Client - advantages and disadvantages

 - WebClient -> Synchronous and Asynchronous Communication. It is part of Spring WebFlux.
 - Rest Template -> Only for Synchronous communication
 - Http Client -> Synchronous and Asynchronous Communication. It is part of Java Library.

========================================================================================================================================================

4. how connection pooling works with resttemplate or any client calls?

	- Connection pooling is a technique used in client-server communication to manage and reuse network connections to improve efficiency and performance. 
	-  It does not have built-in support for connection pooling. Instead, it relies on an HTTP client library for its network operations. 
	
	- Code: 
			PoolingHttpClientConnectionManager connectionManager = new PoolingHttpClientConnectionManager();
			connectionManager.setMaxTotal(200); // Maximum total connections
			connectionManager.setDefaultMaxPerRoute(20); // Maximum connections per route

			CloseableHttpClient httpClient = HttpClients.custom().setConnectionManager(connectionManager).build();

			// Create a RestTemplate with the custom HttpClient
			RestTemplate restTemplate = new RestTemplate(new HttpComponentsClientHttpRequestFactory(httpClient));

========================================================================================================================================================

5. how to find the start and end timestamp while making a client call using rest template in spring boot?

	- Create a Custom Aspect: First, create a custom aspect that intercepts RestTemplate client calls and logs the timestamps. You can define this aspect as a Spring @Aspect component.
	@Before("execution(* org.springframework.web.client.RestTemplate.*(..))")
	@AfterReturning("execution(* org.springframework.web.client.RestTemplate.*(..))")
	
	- By using interceptor, while logging request and response.

========================================================================================================================================================

6. 3xx - Redirect - what is the purpose of redirect?

	- @GetMapping("/old-blog-post")
    public String redirectToNewBlogPost() {
        // Perform a temporary redirection (HTTP 302 Found) to the new URL
        return "redirect:/new-blog-post";
    }

    @GetMapping("/new-blog-post")
    public String newBlogPost() {
        // Handle the new blog post page
        return "new_blog_post";
    }
	
	- it is applicable only for get url

========================================================================================================================================================
7. What will happen with the below code?

	@GetMapping("/{userId}")
    @PutMapping("/")
    public ResponseEntity<String> getPayment(@PathVariable int userId) {
        return ResponseEntity.ok().body("Success");
    }
	
	Answer: 
		- @GetMapping annotation comes first, the method will only handle HTTP GET requests mapping to the path "/{userId}". 
		- If you try to send a PUT request to the root path "/", it will not be mapped to this method.
	
========================================================================================================================================================